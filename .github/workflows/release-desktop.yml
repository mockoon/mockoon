name: Release desktop

permissions:
  contents: read
  actions: write

on:
  workflow_dispatch:
  push:
    tags:
      - v*

jobs:
  generate-sbom:
    name: Generate SPDX SBOM
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: "24"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Extract app version from tag
        id: app-version
        run: |
          APP_VERSION=${GITHUB_REF#refs/tags/v}
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_OUTPUT
      - name: Generate SPDX SBOM file
        run: |
          mkdir -p sbom-files
          cd packages/app && npm sbom --sbom-type application --sbom-format spdx --omit dev > ../../sbom-files/mockoon-app-v${{steps.app-version.outputs.APP_VERSION}}-sbom.spdx.json
      - name: Upload SBOM artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: app-sbom-file-v${{steps.app-version.outputs.APP_VERSION}}
          path: sbom-files/

  build-macos:
    name: Build macOS binaries
    runs-on: macos-latest
    environment: production
    timeout-minutes: 60

    env:
      APPLEID: ${{secrets.APPLEID}}
      TEAMID: ${{secrets.TEAMID}}
      APPLEIDPASS: ${{secrets.APPLEIDPASS}}
      ASCPROVIDER: ${{secrets.ASCPROVIDER}}
      CSC_LINK: ${{secrets.MACOS_CSC_LINK}}
      CSC_KEY_PASSWORD: ${{secrets.MACOS_CSC_KEY_PASSWORD}}
      USE_HARD_LINKS: false

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: "24"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build and package application
        run: |
          npm run build:libs
          npm run build:desktop:prod
          npm run package:desktop:mac
      - name: Verify notarization
        run: |
          codesign --verify --deep --strict --verbose=2 ./packages/app/packages/mac/Mockoon.app
          codesign --verify --deep --strict --verbose=2 ./packages/app/packages/mac-arm64/Mockoon.app
          codesign --verify --deep --strict --verbose=2 ./packages/app/packages/mac-universal/Mockoon.app
      - name: Get dmg binaries shasum
        run: |
          shasum -a 256 ./packages/app/packages/mockoon.setup.*.arm64.dmg
          shasum -a 256 ./packages/app/packages/mockoon.setup.*.x64.dmg
      - name: Upload macOS dmg
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dmg
          path: ./packages/app/packages/mockoon.setup*.dmg

  build-linux:
    name: Build Linux binaries
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 60
    env:
      USE_HARD_LINKS: false

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: "24"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build and package application
        run: |
          npm run build:libs
          npm run build:desktop:prod
          npm run package:desktop:linux
      - name: Upload Linux AppImage
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: appimage
          path: ./packages/app/packages/mockoon-*.AppImage
      - name: Upload Linux deb
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: deb
          path: ./packages/app/packages/mockoon-*.deb
      - name: Upload Linux rpm
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: rpm
          path: ./packages/app/packages/mockoon-*.rpm
      - name: Upload Linux snap
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: snap
          path: ./packages/app/packages/mockoon-*.snap

  build-windows:
    name: Build Windows binaries
    runs-on: windows-latest
    environment: production
    timeout-minutes: 60

    env:
      AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
      AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      AZURE_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: "24"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build and package application
        run: |
          npm run build:libs
          npm run build:desktop:prod
          npm run package:desktop:win
        shell: pwsh
      - name: Upload Windows setup exe
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: exe
          path: ./packages/app/packages/mockoon.setup.*.exe
      - name: Upload Windows portable exe
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: exe-portable
          path: ./packages/app/packages/mockoon.portable.*.exe

  # APPX build requires no code signing env vars to work, thus the separated job
  build-windows-appx:
    name: Build Windows Appx binary
    runs-on: windows-latest
    environment: production
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: "24"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build and package application
        run: |
          npm run build:libs
          npm run build:desktop:prod
          npm run package:desktop:win:appx
        shell: pwsh
      - name: Upload Windows appx
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: appx
          path: ./packages/app/packages/mockoon.*.appx
