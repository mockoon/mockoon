name: CI

on: [push, pull_request]

jobs:
  lint:
    name: Lint and format
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.0
      - name: Install Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          cache: "pnpm"
      - name: Install dependencies
        run: |
          pnpm install
      - name: Lint and check format
        run: |
          pnpm run lint
          pnpm run format

  test-libs:
    name: Libs - Build and test
    runs-on: ubuntu-latest
    timeout-minutes: 10

    needs: lint

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.0
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          cache: "pnpm"
      - name: Install dependencies
        run: |
          pnpm install
      - name: Build and test
        run: |
          pnpm run build:libs
          pnpm run test:libs

  test-cli:
    name: CLI - Build and test
    runs-on: ubuntu-latest
    timeout-minutes: 15

    needs: [lint, test-libs]

    strategy:
      matrix:
        node: [14, 15, 16]

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.0
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"
      - name: Install dependencies
        run: |
          pnpm install
      - name: Build and test
        run: |
          pnpm run build:libs
          pnpm run build:cli
          pnpm run test:cli

  # run generic unpackaged desktop tests when not on the main branch
  test-desktop:
    name: Desktop - Build and test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    needs: [lint, test-libs]

    if: github.ref != 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.0
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          cache: "pnpm"
      - name: Install dependencies
        run: |
          pnpm install
      - name: Build
        run: |
          pnpm run build:libs
          pnpm run build:desktop:ci
      - name: Run tests
        run: |
          export DISPLAY=':99.0'
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          pnpm run test:desktop

  # run desktop packaged tests when on the main branch (commits on main are always release candidates) or in a PR

  test-desktop-packaged-win:
    name: Desktop packaged Windows - Build and test
    runs-on: windows-latest
    timeout-minutes: 60

    needs: [lint, test-libs]

    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    env:
      CSC_LINK: ${{secrets.WIN_CSC_LINK}}
      CSC_KEY_PASSWORD: ${{secrets.WIN_CSC_KEY_PASSWORD}}

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.0
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          cache: "pnpm"
      - name: Install dependencies
        run: |
          pnpm install
      - name: Build
        run: |
          pnpm run build:libs
          pnpm run build:desktop:ci
          pnpm run package:desktop:test:win
      - name: Run tests
        run: |
          pnpm run test:desktop:packaged:win

  test-desktop-packaged-mac:
    name: Desktop packaged MacOS - Build and test
    runs-on: macos-latest
    timeout-minutes: 60

    needs: [lint, test-libs]

    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    env:
      APPLEID: ${{secrets.APPLEID}}
      APPLEIDPASS: ${{secrets.APPLEIDPASS}}
      ASCPROVIDER: ${{secrets.ASCPROVIDER}}
      CSC_LINK: ${{secrets.MACOS_CSC_LINK}}
      CSC_KEY_PASSWORD: ${{secrets.MACOS_CSC_KEY_PASSWORD}}
      USE_HARD_LINKS: false

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.0
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          cache: "pnpm"
      - name: Install dependencies
        run: |
          pnpm install
      - name: Build
        run: |
          pnpm run build:libs
          pnpm run build:desktop:ci
          pnpm run package:desktop:test:mac
      - name: Run tests
        run: |
          export DISPLAY=':99.0'
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          pnpm run test:desktop:packaged:mac

  test-desktop-packaged-linux:
    name: Desktop packaged Linux - Build and test
    runs-on: ubuntu-latest
    timeout-minutes: 60

    needs: [lint, test-libs]

    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    env:
      USE_HARD_LINKS: false

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.0
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          cache: "pnpm"
      - name: Install dependencies
        run: |
          pnpm install
      - name: Build
        run: |
          pnpm run build:libs
          pnpm run build:desktop:ci
          pnpm run package:desktop:test:linux
      - name: Run tests
        run: |
          export DISPLAY=':99.0'
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          pnpm run test:desktop:packaged:linux
