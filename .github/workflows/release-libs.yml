name: Release libs (NPM)

permissions:
  contents: read

on:
  push:
    tags:
      - libs-v*

jobs:
  npm-publish:
    name: Publish the libs on NPM
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 15

    env:
      NPM_TOKEN: ${{secrets.NPM_TOKEN}}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: "22.x"
          package-manager-cache: false
      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        id: cache-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: |
          npm run bootstrap
      - name: Link packages
        run: |
          npm run link
      - name: Build
        run: |
          npm run build:libs
          npm run build:serverless
          npm run build:cli
      - name: Extract libs version from tag
        id: libs-version
        run: |
          LIBS_VERSION=${GITHUB_REF#refs/tags/libs-v}
          echo "LIBS_VERSION=$LIBS_VERSION" >> $GITHUB_OUTPUT
      - name: Add NPM token
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
          git update-index --assume-unchanged .npmrc
      - name: Generate SPDX SBOM files
        run: |
          mkdir -p sbom-files
          for pkg in commons commons-server cloud serverless cli; do
            cd packages/$pkg
            npm sbom --sbom-type library --sbom-format spdx --omit dev > ../../sbom-files/mockoon-$pkg-v${{steps.libs-version.outputs.LIBS_VERSION}}-sbom.spdx.json
            cd - > /dev/null
          done
      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: libs-sbom-files-v${{steps.libs-version.outputs.LIBS_VERSION}}
          path: sbom-files/
      - name: NPM publish
        run: |
          npm run publish

  cli-docker:
    name: Push Docker image
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 15

    needs: npm-publish

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Extract app version
        id: app-version
        run: |
          PACKAGE_VERSION=$(node -p -e "require('./packages/cli/package.json').version")
          PACKAGE_MAJOR_VERSION=$(node -p -e "require('./packages/cli/package.json').version.split('.')[0]")
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "PACKAGE_MAJOR_VERSION=$PACKAGE_MAJOR_VERSION" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v2.2.0
        with:
          platforms: "arm64,arm,x86_64"
      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Login to DockerHub
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          context: ./packages/cli/docker
          tags: |
            mockoon/cli:latest
            mockoon/cli:${{steps.app-version.outputs.PACKAGE_VERSION}}
            mockoon/cli:${{steps.app-version.outputs.PACKAGE_MAJOR_VERSION}}
          build-args: |
            version=${{steps.app-version.outputs.PACKAGE_VERSION}}
