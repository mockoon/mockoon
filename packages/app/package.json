{
  "name": "@mockoon/app",
  "description": "Mockoon is the easiest and quickest way to run mock APIs locally. No remote deployment, no account required, open source.",
  "version": "9.2.0",
  "author": {
    "name": "Mockoon (1kB SARL-S)",
    "email": "team@mockoon.com",
    "url": "https://mockoon.com/"
  },
  "private": true,
  "license": "MIT",
  "repository": "https://github.com/mockoon/mockoon",
  "homepage": "https://mockoon.com",
  "bugs": {
    "url": "https://github.com/mockoon/mockoon/issues"
  },
  "funding": "https://mockoon.com/sponsor-us/",
  "browserslist": [
    "Chrome >= 100"
  ],
  "main": "./dist/app.js",
  "scripts": {
    "documentation": "rm -rf ./tmp/docs && wdio run ./test/wdio-documentation.conf.ts",
    "lint": "ng lint",
    "test:win": "wdio run ./test/wdio-win.conf.ts",
    "test:mac": "wdio run ./test/wdio-mac.conf.ts",
    "test:linux": "wdio run ./test/wdio-linux.conf.ts",
    "clean-dist": "rm -rf ./dist",
    "clean-packages": "rm -rf ./packages",
    "build:watch:main": "webpack --config ./src/main/webpack.config.js --mode development --watch",
    "build:dev:main": "webpack --config ./src/main/webpack.config.js --mode development",
    "build:ci:main": "webpack --config ./src/main/webpack.config.js --mode production --env isTesting=1",
    "build:prod:main": "webpack --config ./src/main/webpack.config.js --mode production",
    "build:watch:renderer": "ng build --configuration=development --watch --output-hashing=all",
    "build:watch:web": "ng build --configuration=development-web --watch --output-hashing=all",
    "build:dev:renderer": "ng build --configuration=development --output-hashing=all",
    "build:ci:renderer": "ng build --configuration=ci",
    "build:prod:renderer": "ng build --configuration=production",
    "build:prod:web": "npm run clean-dist && ng build --configuration=production-web",
    "build:watch:all": "npm run clean-dist && concurrently \"npm run build:watch:renderer\" \"npm run build:watch:main\"",
    "build:dev:all": "npm run clean-dist && npm run build:dev:renderer && npm run build:dev:main",
    "build:ci:all": "npm run clean-dist && npm run build:ci:renderer && npm run build:ci:main",
    "build:prod:all": "npm run clean-dist && npm run build:prod:renderer && npm run build:prod:main",
    "start:web": "http-server ./dist/renderer -p 3001 -P http://localhost:3001?",
    "start": "electron . --remote-debugging-port=8888 --data-folder=./tmp --enable-dev-tools",
    "start:2": "electron . --remote-debugging-port=8889 --data-folder=./tmp2 --enable-dev-tools",
    "start:3": "electron . --remote-debugging-port=8890 --data-folder=./tmp3 --enable-dev-tools",
    "package:win": "npm run clean-packages && electron-builder --publish never --config ./build-configs/electron-builder.win.js",
    "package:win:appx": "npm run clean-packages && electron-builder --publish never --config ./build-configs/electron-builder.win-appx.js",
    "package:linux": "npm run clean-packages && electron-builder --publish never --config ./build-configs/electron-builder.linux.js",
    "package:mac": "npm run clean-packages && electron-builder --publish never --config ./build-configs/electron-builder.mac.js",
    "package:mac:unsigned": "npm run clean-packages && electron-builder --publish never --config ./build-configs/electron-builder.mac-unsigned.js",
    "package:test:win": "npm run clean-packages && electron-builder --publish never --config ./build-configs/test/electron-builder.win.js --dir",
    "package:test:linux": "npm run clean-packages && electron-builder --publish never --config ./build-configs/test/electron-builder.linux.js --dir",
    "package:test:mac": "npm run clean-packages && electron-builder --publish never --config ./build-configs/test/electron-builder.mac.js --dir",
    "deploy:web": "firebase deploy --only hosting"
  },
  "dependencies": {
    "@microsoft/fetch-event-source": "2.0.1",
    "@mockoon/cloud": "9.2.0",
    "@mockoon/commons": "9.2.0",
    "@mockoon/commons-server": "9.2.0",
    "chokidar": "3.6.0",
    "electron-json-storage": "4.6.0",
    "electron-window-state": "5.0.3",
    "mime-types": "2.1.35",
    "mkdirp": "3.0.1",
    "object-path": "0.11.8",
    "semver": "7.7.1",
    "socket.io-client": "4.8.1",
    "winston": "3.17.0"
  },
  "devDependencies": {
    "@angular/animations": "19.2.1",
    "@angular/build": "^19.2.8",
    "@angular/cli": "19.2.1",
    "@angular/common": "19.2.1",
    "@angular/compiler": "19.2.1",
    "@angular/compiler-cli": "19.2.1",
    "@angular/core": "19.2.1",
    "@angular/fire": "19.0.0",
    "@angular/forms": "19.2.1",
    "@angular/localize": "19.2.1",
    "@angular/platform-browser": "19.2.1",
    "@angular/platform-browser-dynamic": "19.2.1",
    "@electron/notarize": "2.5.0",
    "@ng-bootstrap/ng-bootstrap": "18.0.0",
    "@types/electron-json-storage": "4.5.4",
    "@types/mime-types": "2.1.4",
    "@types/node": "22.13.10",
    "@types/object-path": "0.11.4",
    "@types/semver": "7.5.8",
    "@wdio/cli": "9.11.0",
    "@wdio/local-runner": "9.11.0",
    "@wdio/mocha-framework": "9.11.0",
    "@wdio/spec-reporter": "9.11.0",
    "angular-eslint": "19.2.1",
    "bootstrap": "5.3.3",
    "brace": "0.11.1",
    "date-fns": "4.1.0",
    "electron": "34.3.2",
    "electron-builder": "25.1.8",
    "firebase": "11.4.0",
    "joi": "17.13.3",
    "ngx-markdown": "19.1.0",
    "ngx-mask": "19.0.6",
    "rxjs": "7.8.2",
    "timers": "0.1.1",
    "ts-loader": "9.5.2",
    "ts-node": "10.9.2",
    "tsconfig-paths": "4.2.0",
    "tslib": "2.8.1",
    "typescript": "5.5.4",
    "wdio-electron-service": "7.3.2",
    "webpack": "5.98.0",
    "webpack-cli": "6.0.1",
    "webpack-node-externals": "3.0.0",
    "ws": "8.18.1",
    "zone.js": "~0.15.0"
  }
}
