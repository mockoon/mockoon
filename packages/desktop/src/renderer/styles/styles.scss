@import './boostrap-overrides.scss';
@import './animations.scss';

// custom scrollbar
::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-thumb {
  background: lighten($gray-900, 6%);
  border-radius: 20px;
}

::-webkit-scrollbar-track {
  background: transparent;
  border-radius: 20px;
}

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

// ace editor custom scrollbar
.ace_scrollbar.ace_scrollbar-v::-webkit-scrollbar-thumb {
  background: lighten($gray-900, 5%);
}

::selection {
  background: rgba($blue, 0.5);
}

html {
  // reduce page size reduce everything in bootstrap
  font-size: 14px;
}

body {
  user-select: none;
  cursor: default;
  overflow: hidden;
  letter-spacing: 0.02rem;
}

html,
body {
  height: 100vh;
}

select,
input,
.btn,
.dropdown-item {
  transition: all ease-in-out 100ms;
}

.dropdown-menu {
  max-height: 300px;
  overflow-y: auto;

  &::-webkit-scrollbar-track,
  *::-webkit-scrollbar-track {
    background-color: $custom-gray;
  }

  &::-webkit-scrollbar-thumb,
  *::-webkit-scrollbar-thumb {
    background: lighten($gray-900, 15%);
  }
}

.h-35 {
  max-height: 35%;
}

.main-content {
  background-color: darken($gray-900, 2%);
}

.ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.column-width {
  min-width: 25%;
  max-width: 25%;
}

.menu-list {
  overflow-x: hidden;
  overflow-y: auto;
}

// avoid list style when dragging (item is created outside of a .nav)
.nav-item {
  list-style: none;
}

.nav-link-subtitle {
  color: $gray-500;
  font-size: $small-font-size;
}

.scroll-content {
  overflow-x: hidden;
  overflow-y: scroll;
}

.cp {
  cursor: pointer;
}

.cursor-grab {
  cursor: grab;
}

.cursor-text {
  cursor: text;
}

// route badges (methods)
$route-badges: ('crud', lighten($cyan, 15%)), ('get', lighten($blue, 10%)),
  ('put', lighten($orange, 10%)), ('post', lighten($green, 10%)),
  ('delete', lighten($red, 17%)), ('head', lighten($purple, 25%)),
  ('patch', $teal), ('options', lighten($dark-blue, 30%)),
  ('propfind', lighten($custom-gray, 45%)),
  ('proppatch', lighten($custom-gray, 45%)),
  ('copy', lighten($custom-gray, 45%)), ('move', lighten($custom-gray, 45%)),
  ('lock', lighten($custom-gray, 45%)), ('unlock', lighten($custom-gray, 45%)),
  ('mkcol', lighten($custom-gray, 45%));
@each $method in $route-badges {
  .route-badge-#{nth($method, 1)} {
    background-color: #{nth($method, 2)};
    color: darken($gray-900, 10%);
  }
  .route-badge-#{nth($method, 1)}-text {
    color: #{nth($method, 2)};
  }
}

// response badges (methods)
$response-badges: ('get', lighten($blue, 10%)), ('4xx', lighten($orange, 10%)),
  ('2xx', lighten($green, 10%)), ('5xx', lighten($red, 17%)),
  ('3xx', lighten($purple, 25%)), ('1xx', lighten($custom-gray, 45%));
@each $status in $response-badges {
  .response-badge-#{nth($status, 1)} {
    background-color: #{nth($status, 2)};
    color: darken($gray-900, 10%);
  }
  .response-badge-#{nth($status, 1)}-text {
    color: #{nth($status, 2)};
  }
}

.flex-fill {
  flex: 1;
}

.flex-none {
  flex: none !important;
}

.z-index-1 {
  z-index: 1;
}

.form-right {
  position: absolute;
  right: 0;
}

.toasts-container {
  z-index: 5000;
  position: absolute;
  width: 250px;
  top: ($spacer / 2) + 2rem;
  right: $spacer / 2;

  .toast {
    word-break: break-word;
  }

  .toast-success {
    .toast-body {
      background-color: $green;
      border-color: lighten($green, 10%);
    }
  }

  .toast-warning {
    .toast-body {
      background-color: $orange;
      border-color: lighten($orange, 10%);
    }
  }

  .toast-error {
    .toast-body {
      background-color: $red;
      border-color: lighten($red, 10%);
    }
  }
}

.message {
  text-align: center;
  font-size: $font-size-lg;
  color: $gray-600;
  font-weight: $font-weight-light;

  &-md {
    font-size: $font-size-md;
  }

  &-sm {
    font-size: $font-size-sm;
  }
}

.success-message {
  font-size: 0.8rem;
  color: $success;
}
.error-message {
  font-size: 0.8rem;
  color: $danger;
}
.warning-message {
  font-size: 0.8rem;
  color: $warning;
}

.resize-column {
  position: absolute;
  width: 4px;
  height: 100%;
  right: 0;
  top: 0;
  cursor: col-resize;

  &:hover {
    animation-name: resizerFadeIn;
    animation-duration: 0.75s;
    animation-delay: 0.25s;
    animation-fill-mode: forwards;
  }
}

@keyframes resizerFadeIn {
  from {
    box-shadow: inset -4px 0 0 0 rgba($blue, 0);
  }
  to {
    box-shadow: inset -4px 0 0 0 rgba($blue, 0.8);
  }
}

.brackets {
  background-image: linear-gradient($gray-500, $gray-500),
    linear-gradient($gray-500, $gray-500);
  background-repeat: no-repeat;
  background-size: 8px 3px;
  background-position:
    top left,
    bottom left;
  border-left: 3px solid $gray-500;
  margin: $spacer / 2;
  width: 11px;
}

.drag-highlight {
  position: relative;

  &::after {
    position: absolute;
    content: '';
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    border: 2px solid rgba($blue, 0.8);
  }
}

.drag-highlight-top {
  position: relative;

  &::before {
    position: absolute;
    z-index: 1000;
    content: '';
    top: -1px;
    height: 2px;
    left: 0;
    right: 0;
    border-top: 2px solid rgba($blue, 0.8);
  }
}

.drag-highlight-bottom {
  position: relative;

  &::after {
    position: absolute;
    z-index: 1000;
    content: '';
    bottom: -1px;
    height: 2px;
    left: 0;
    right: 0;
    border-top: 2px solid rgba($blue, 0.8);
  }
}

.with-indicator {
  position: relative;

  &::before {
    content: '';
    position: absolute;
    bottom: -2px;
    right: -2px;
    background-color: #39c939;
    display: block;
    width: 6px;
    height: 6px;
    border-radius: 50%;
  }
}

.no-interact {
  pointer-events: none;
  user-select: none;
}

.text-shadow {
  text-shadow: $box-shadow !important;
}
