{
  "uuid": "",
  "lastMigration": 22,
  "name": "Slack",
  "endpointPrefix": "api",
  "latency": 0,
  "port": 3000,
  "routes": [
    {
      "uuid": "",
      "documentation": "Wipes all valid sessions on all devices for a given user",
      "method": "post",
      "endpoint": "admin.users.session.reset",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Checks API calling code.",
      "method": "get",
      "endpoint": "api.test",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Artificial error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Returns list of permissions this app has on a team.",
      "method": "get",
      "endpoint": "apps.permissions.info",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard success response when used with a user token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard failure response when used with an invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Allows an app to request additional scopes",
      "method": "get",
      "endpoint": "apps.permissions.request",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard success response when used with a user token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard failure response when trigger_id is invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Returns list of resource grants this app has on a team.",
      "method": "get",
      "endpoint": "apps.permissions.resources.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical successful paginated response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Returns list of scopes this app has on a team.",
      "method": "get",
      "endpoint": "apps.permissions.scopes.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical successful paginated response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Returns list of user grants and corresponding scopes this app has on a team.",
      "method": "get",
      "endpoint": "apps.permissions.users.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical successful paginated response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Enables an app to trigger a permissions modal to grant an app access to a user access scope.",
      "method": "get",
      "endpoint": "apps.permissions.users.request",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard success response when used with a user token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard failure response when trigger_id is invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Uninstalls your app from a workspace.",
      "method": "get",
      "endpoint": "apps.uninstall",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Revokes a token.",
      "method": "get",
      "endpoint": "auth.revoke",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Checks authentication & identity.",
      "method": "get",
      "endpoint": "auth.test",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"team\": \"\",\n  \"team_id\": \"\",\n  \"url\": \"\",\n  \"user\": \"\",\n  \"user_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard success response when used with a user token",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'token_revoked' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard failure response when used with an invalid token",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Gets information about a bot user.",
      "method": "get",
      "endpoint": "bots.info",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "When successful, returns bot info by bot ID.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "When no bot can be found, it returns an error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Archives a channel.",
      "method": "post",
      "endpoint": "channels.archive",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'already_archived' 'cant_archive_general' 'restricted_action' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Creates a channel.",
      "method": "post",
      "endpoint": "channels.create",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": {\n    \"accepted_user\": \"\",\n    \"created\": {{faker 'datatype.number'}},\n    \"creator\": \"\",\n    \"id\": \"\",\n    \"is_archived\": {{faker 'datatype.boolean'}},\n    \"is_channel\": {{faker 'datatype.boolean'}},\n    \"is_general\": {{faker 'datatype.boolean'}},\n    \"is_member\": {{faker 'datatype.boolean'}},\n    \"is_moved\": {{faker 'datatype.number'}},\n    \"is_mpim\": {{faker 'datatype.boolean'}},\n    \"is_org_shared\": {{faker 'datatype.boolean'}},\n    \"is_pending_ext_shared\": {{faker 'datatype.boolean'}},\n    \"is_private\": {{faker 'datatype.boolean'}},\n    \"is_read_only\": {{faker 'datatype.boolean'}},\n    \"is_shared\": {{faker 'datatype.boolean'}},\n    \"last_read\": \"\",\n    \"latest\": \"\",\n    \"members\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"name_normalized\": \"\",\n    \"num_members\": {{faker 'datatype.number'}},\n    \"pending_shared\": [\n      \"\"\n    ],\n    \"previous_names\": [\n      \"\"\n    ],\n    \"priority\": {{faker 'datatype.number'}},\n    \"purpose\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"topic\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"unlinked\": {{faker 'datatype.number'}},\n    \"unread_count\": {{faker 'datatype.number'}},\n    \"unread_count_display\": {{faker 'datatype.number'}}\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response resulting in a new channel",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'name_taken' 'restricted_action' 'no_channel' 'invalid_name_required' 'invalid_name_punctuation' 'invalid_name_maxlength' 'invalid_name_specials' 'invalid_name' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Example error response when an invalid name is provided",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Fetches history of messages and events from a channel.",
      "method": "get",
      "endpoint": "channels.history",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response containing the channel's history",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response when the specified channel cannot be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Gets information about a channel.",
      "method": "get",
      "endpoint": "channels.info",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response when the specified channel cannot be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Invites a user to a channel.",
      "method": "post",
      "endpoint": "channels.invite",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": {\n    \"accepted_user\": \"\",\n    \"created\": {{faker 'datatype.number'}},\n    \"creator\": \"\",\n    \"id\": \"\",\n    \"is_archived\": {{faker 'datatype.boolean'}},\n    \"is_channel\": {{faker 'datatype.boolean'}},\n    \"is_general\": {{faker 'datatype.boolean'}},\n    \"is_member\": {{faker 'datatype.boolean'}},\n    \"is_moved\": {{faker 'datatype.number'}},\n    \"is_mpim\": {{faker 'datatype.boolean'}},\n    \"is_org_shared\": {{faker 'datatype.boolean'}},\n    \"is_pending_ext_shared\": {{faker 'datatype.boolean'}},\n    \"is_private\": {{faker 'datatype.boolean'}},\n    \"is_read_only\": {{faker 'datatype.boolean'}},\n    \"is_shared\": {{faker 'datatype.boolean'}},\n    \"last_read\": \"\",\n    \"latest\": \"\",\n    \"members\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"name_normalized\": \"\",\n    \"num_members\": {{faker 'datatype.number'}},\n    \"pending_shared\": [\n      \"\"\n    ],\n    \"previous_names\": [\n      \"\"\n    ],\n    \"priority\": {{faker 'datatype.number'}},\n    \"purpose\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"topic\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"unlinked\": {{faker 'datatype.number'}},\n    \"unread_count\": {{faker 'datatype.number'}},\n    \"unread_count_display\": {{faker 'datatype.number'}}\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'user_not_found' 'cant_invite_self' 'not_in_channel' 'already_in_channel' 'is_archived' 'cant_invite' 'too_many_users' 'ura_max_channels' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A somewhat typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Joins a channel, creating it if needed.",
      "method": "post",
      "endpoint": "channels.join",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"already_in_channel\": {{faker 'datatype.boolean'}},\n  \"channel\": {\n    \"accepted_user\": \"\",\n    \"created\": {{faker 'datatype.number'}},\n    \"creator\": \"\",\n    \"id\": \"\",\n    \"is_archived\": {{faker 'datatype.boolean'}},\n    \"is_channel\": {{faker 'datatype.boolean'}},\n    \"is_general\": {{faker 'datatype.boolean'}},\n    \"is_member\": {{faker 'datatype.boolean'}},\n    \"is_moved\": {{faker 'datatype.number'}},\n    \"is_mpim\": {{faker 'datatype.boolean'}},\n    \"is_org_shared\": {{faker 'datatype.boolean'}},\n    \"is_pending_ext_shared\": {{faker 'datatype.boolean'}},\n    \"is_private\": {{faker 'datatype.boolean'}},\n    \"is_read_only\": {{faker 'datatype.boolean'}},\n    \"is_shared\": {{faker 'datatype.boolean'}},\n    \"last_read\": \"\",\n    \"latest\": \"\",\n    \"members\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"name_normalized\": \"\",\n    \"num_members\": {{faker 'datatype.number'}},\n    \"pending_shared\": [\n      \"\"\n    ],\n    \"previous_names\": [\n      \"\"\n    ],\n    \"priority\": {{faker 'datatype.number'}},\n    \"purpose\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"topic\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"unlinked\": {{faker 'datatype.number'}},\n    \"unread_count\": {{faker 'datatype.number'}},\n    \"unread_count_display\": {{faker 'datatype.number'}}\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'name_taken' 'restricted_action' 'no_channel' 'is_archived' 'invalid_name_required' 'invalid_name_punctuation' 'invalid_name_maxlength' 'invalid_name_specials' 'invalid_name' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Removes a user from a channel.",
      "method": "post",
      "endpoint": "channels.kick",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'user_not_found' 'cant_kick_self' 'not_in_channel' 'cant_kick_from_general' 'restricted_action' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Leaves a channel.",
      "method": "post",
      "endpoint": "channels.leave",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'is_archived' 'cant_leave_general' 'cant_leave_mandatory_shared_channel' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Lists all channels in a Slack team.",
      "method": "get",
      "endpoint": "channels.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical cursored success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Sets the read cursor in a channel.",
      "method": "post",
      "endpoint": "channels.mark",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'invalid_timestamp' 'not_in_channel' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Renames a channel.",
      "method": "post",
      "endpoint": "channels.rename",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": {\n    \"accepted_user\": \"\",\n    \"created\": {{faker 'datatype.number'}},\n    \"creator\": \"\",\n    \"id\": \"\",\n    \"is_archived\": {{faker 'datatype.boolean'}},\n    \"is_channel\": {{faker 'datatype.boolean'}},\n    \"is_general\": {{faker 'datatype.boolean'}},\n    \"is_member\": {{faker 'datatype.boolean'}},\n    \"is_moved\": {{faker 'datatype.number'}},\n    \"is_mpim\": {{faker 'datatype.boolean'}},\n    \"is_org_shared\": {{faker 'datatype.boolean'}},\n    \"is_pending_ext_shared\": {{faker 'datatype.boolean'}},\n    \"is_private\": {{faker 'datatype.boolean'}},\n    \"is_read_only\": {{faker 'datatype.boolean'}},\n    \"is_shared\": {{faker 'datatype.boolean'}},\n    \"last_read\": \"\",\n    \"latest\": \"\",\n    \"members\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"name_normalized\": \"\",\n    \"num_members\": {{faker 'datatype.number'}},\n    \"pending_shared\": [\n      \"\"\n    ],\n    \"previous_names\": [\n      \"\"\n    ],\n    \"priority\": {{faker 'datatype.number'}},\n    \"purpose\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"topic\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"unlinked\": {{faker 'datatype.number'}},\n    \"unread_count\": {{faker 'datatype.number'}},\n    \"unread_count_display\": {{faker 'datatype.number'}}\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'not_in_channel' 'not_authorized' 'invalid_name' 'name_taken' 'invalid_name_required' 'invalid_name_punctuation' 'invalid_name_maxlength' 'invalid_name_specials' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Retrieve a thread of messages posted to a channel",
      "method": "get",
      "endpoint": "channels.replies",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Sets the purpose for a channel.",
      "method": "post",
      "endpoint": "channels.setPurpose",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"purpose\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'not_in_channel' 'is_archived' 'too_long' 'user_is_restricted' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Sets the topic for a channel.",
      "method": "post",
      "endpoint": "channels.setTopic",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"topic\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'not_in_channel' 'is_archived' 'too_long' 'user_is_restricted' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Unarchives a channel.",
      "method": "post",
      "endpoint": "channels.unarchive",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'not_archived' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Deletes a message.",
      "method": "post",
      "endpoint": "chat.delete",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"ts\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'message_not_found' 'channel_not_found' 'cant_delete_message' 'compliance_exports_prevent_deletion' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Deletes a pending scheduled message from the queue.",
      "method": "post",
      "endpoint": "chat.deleteScheduledMessage",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'invalid_scheduled_message_id' 'channel_not_found' 'bad_token' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'ekm_access_denied' 'missing_scope' 'invalid_arguments' 'invalid_arg_name' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response if no message is found",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Retrieve a permalink URL for a specific extant message",
      "method": "get",
      "endpoint": "chat.getPermalink",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response when channel cannot be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Share a me message into a channel.",
      "method": "post",
      "endpoint": "chat.meMessage",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"ts\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'not_in_channel' 'is_archived' 'msg_too_long' 'no_text' 'rate_limited' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Sends an ephemeral message to a user in a channel.",
      "method": "post",
      "endpoint": "chat.postEphemeral",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"message_ts\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'is_archived' 'msg_too_long' 'no_text' 'restricted_action' 'too_many_attachments' 'user_not_in_channel' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Sends a message to a channel.",
      "method": "post",
      "endpoint": "chat.postMessage",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": \"\",\n  \"message\": {\n    \"attachments\": [\n      {\n        \"fallback\": \"\",\n        \"id\": {{faker 'datatype.number'}},\n        \"image_bytes\": {{faker 'datatype.number'}},\n        \"image_height\": {{faker 'datatype.number'}},\n        \"image_url\": \"\",\n        \"image_width\": {{faker 'datatype.number'}}\n      }\n    ],\n    \"blocks\": [\n      {\n        \"type\": \"\"\n      }\n    ],\n    \"bot_id\": \"\",\n    \"client_msg_id\": \"\",\n    \"comment\": {\n      \"comment\": \"\",\n      \"created\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"is_intro\": {{faker 'datatype.boolean'}},\n      \"is_starred\": {{faker 'datatype.boolean'}},\n      \"num_stars\": {{faker 'datatype.number'}},\n      \"pinned_info\": {},\n      \"pinned_to\": [\n        \"\"\n      ],\n      \"reactions\": [\n        {\n          \"count\": {{faker 'datatype.number'}},\n          \"name\": \"\",\n          \"users\": [\n            \"\"\n          ]\n        }\n      ],\n      \"timestamp\": {{faker 'datatype.number'}},\n      \"user\": \"\"\n    },\n    \"display_as_bot\": {{faker 'datatype.boolean'}},\n    \"file\": {\n      \"channels\": [\n        \"\"\n      ],\n      \"comments_count\": {{faker 'datatype.number'}},\n      \"created\": {{faker 'datatype.number'}},\n      \"display_as_bot\": {{faker 'datatype.boolean'}},\n      \"editable\": {{faker 'datatype.boolean'}},\n      \"editor\": \"\",\n      \"external_id\": \"\",\n      \"external_type\": \"\",\n      \"external_url\": \"\",\n      \"filetype\": \"\",\n      \"groups\": [\n        \"\"\n      ],\n      \"has_rich_preview\": {{faker 'datatype.boolean'}},\n      \"id\": \"\",\n      \"image_exif_rotation\": {{faker 'datatype.number'}},\n      \"ims\": [\n        \"\"\n      ],\n      \"is_external\": {{faker 'datatype.boolean'}},\n      \"is_public\": {{faker 'datatype.boolean'}},\n      \"is_starred\": {{faker 'datatype.boolean'}},\n      \"is_tombstoned\": {{faker 'datatype.boolean'}},\n      \"last_editor\": \"\",\n      \"mimetype\": \"\",\n      \"mode\": \"\",\n      \"name\": \"\",\n      \"num_stars\": {{faker 'datatype.number'}},\n      \"original_h\": {{faker 'datatype.number'}},\n      \"original_w\": {{faker 'datatype.number'}},\n      \"permalink\": \"\",\n      \"permalink_public\": \"\",\n      \"pinned_info\": {},\n      \"pinned_to\": [\n        \"\"\n      ],\n      \"pretty_type\": \"\",\n      \"preview\": \"\",\n      \"public_url_shared\": {{faker 'datatype.boolean'}},\n      \"reactions\": [\n        {\n          \"count\": {{faker 'datatype.number'}},\n          \"name\": \"\",\n          \"users\": [\n            \"\"\n          ]\n        }\n      ],\n      \"shares\": {\n        \"private\": \"\",\n        \"public\": \"\"\n      },\n      \"size\": {{faker 'datatype.number'}},\n      \"source_team\": \"\",\n      \"state\": \"\",\n      \"thumb_1024\": \"\",\n      \"thumb_1024_h\": {{faker 'datatype.number'}},\n      \"thumb_1024_w\": {{faker 'datatype.number'}},\n      \"thumb_160\": \"\",\n      \"thumb_360\": \"\",\n      \"thumb_360_h\": {{faker 'datatype.number'}},\n      \"thumb_360_w\": {{faker 'datatype.number'}},\n      \"thumb_480\": \"\",\n      \"thumb_480_h\": {{faker 'datatype.number'}},\n      \"thumb_480_w\": {{faker 'datatype.number'}},\n      \"thumb_64\": \"\",\n      \"thumb_720\": \"\",\n      \"thumb_720_h\": {{faker 'datatype.number'}},\n      \"thumb_720_w\": {{faker 'datatype.number'}},\n      \"thumb_80\": \"\",\n      \"thumb_800\": \"\",\n      \"thumb_800_h\": {{faker 'datatype.number'}},\n      \"thumb_800_w\": {{faker 'datatype.number'}},\n      \"thumb_960\": \"\",\n      \"thumb_960_h\": {{faker 'datatype.number'}},\n      \"thumb_960_w\": {{faker 'datatype.number'}},\n      \"timestamp\": {{faker 'datatype.number'}},\n      \"title\": \"\",\n      \"updated\": {{faker 'datatype.number'}},\n      \"url_private\": \"\",\n      \"url_private_download\": \"\",\n      \"user\": \"\",\n      \"user_team\": \"\",\n      \"username\": \"\"\n    },\n    \"files\": [\n      {\n        \"channels\": [\n          \"\"\n        ],\n        \"comments_count\": {{faker 'datatype.number'}},\n        \"created\": {{faker 'datatype.number'}},\n        \"display_as_bot\": {{faker 'datatype.boolean'}},\n        \"editable\": {{faker 'datatype.boolean'}},\n        \"editor\": \"\",\n        \"external_id\": \"\",\n        \"external_type\": \"\",\n        \"external_url\": \"\",\n        \"filetype\": \"\",\n        \"groups\": [\n          \"\"\n        ],\n        \"has_rich_preview\": {{faker 'datatype.boolean'}},\n        \"id\": \"\",\n        \"image_exif_rotation\": {{faker 'datatype.number'}},\n        \"ims\": [\n          \"\"\n        ],\n        \"is_external\": {{faker 'datatype.boolean'}},\n        \"is_public\": {{faker 'datatype.boolean'}},\n        \"is_starred\": {{faker 'datatype.boolean'}},\n        \"is_tombstoned\": {{faker 'datatype.boolean'}},\n        \"last_editor\": \"\",\n        \"mimetype\": \"\",\n        \"mode\": \"\",\n        \"name\": \"\",\n        \"num_stars\": {{faker 'datatype.number'}},\n        \"original_h\": {{faker 'datatype.number'}},\n        \"original_w\": {{faker 'datatype.number'}},\n        \"permalink\": \"\",\n        \"permalink_public\": \"\",\n        \"pinned_info\": {},\n        \"pinned_to\": [\n          \"\"\n        ],\n        \"pretty_type\": \"\",\n        \"preview\": \"\",\n        \"public_url_shared\": {{faker 'datatype.boolean'}},\n        \"reactions\": [\n          {\n            \"count\": {{faker 'datatype.number'}},\n            \"name\": \"\",\n            \"users\": [\n              \"\"\n            ]\n          }\n        ],\n        \"shares\": {\n          \"private\": \"\",\n          \"public\": \"\"\n        },\n        \"size\": {{faker 'datatype.number'}},\n        \"source_team\": \"\",\n        \"state\": \"\",\n        \"thumb_1024\": \"\",\n        \"thumb_1024_h\": {{faker 'datatype.number'}},\n        \"thumb_1024_w\": {{faker 'datatype.number'}},\n        \"thumb_160\": \"\",\n        \"thumb_360\": \"\",\n        \"thumb_360_h\": {{faker 'datatype.number'}},\n        \"thumb_360_w\": {{faker 'datatype.number'}},\n        \"thumb_480\": \"\",\n        \"thumb_480_h\": {{faker 'datatype.number'}},\n        \"thumb_480_w\": {{faker 'datatype.number'}},\n        \"thumb_64\": \"\",\n        \"thumb_720\": \"\",\n        \"thumb_720_h\": {{faker 'datatype.number'}},\n        \"thumb_720_w\": {{faker 'datatype.number'}},\n        \"thumb_80\": \"\",\n        \"thumb_800\": \"\",\n        \"thumb_800_h\": {{faker 'datatype.number'}},\n        \"thumb_800_w\": {{faker 'datatype.number'}},\n        \"thumb_960\": \"\",\n        \"thumb_960_h\": {{faker 'datatype.number'}},\n        \"thumb_960_w\": {{faker 'datatype.number'}},\n        \"timestamp\": {{faker 'datatype.number'}},\n        \"title\": \"\",\n        \"updated\": {{faker 'datatype.number'}},\n        \"url_private\": \"\",\n        \"url_private_download\": \"\",\n        \"user\": \"\",\n        \"user_team\": \"\",\n        \"username\": \"\"\n      }\n    ],\n    \"icons\": {\n      \"emoji\": \"\"\n    },\n    \"inviter\": \"\",\n    \"is_delayed_message\": {{faker 'datatype.boolean'}},\n    \"is_intro\": {{faker 'datatype.boolean'}},\n    \"is_starred\": {{faker 'datatype.boolean'}},\n    \"last_read\": \"\",\n    \"latest_reply\": \"\",\n    \"name\": \"\",\n    \"old_name\": \"\",\n    \"parent_user_id\": \"\",\n    \"permalink\": \"\",\n    \"pinned_to\": [\n      \"\"\n    ],\n    \"purpose\": \"\",\n    \"reactions\": [\n      {\n        \"count\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"users\": [\n          \"\"\n        ]\n      }\n    ],\n    \"replies\": [\n      {\n        \"ts\": \"\",\n        \"user\": \"\"\n      }\n    ],\n    \"reply_count\": {{faker 'datatype.number'}},\n    \"reply_users\": [\n      \"\"\n    ],\n    \"reply_users_count\": {{faker 'datatype.number'}},\n    \"source_team\": \"\",\n    \"subscribed\": {{faker 'datatype.boolean'}},\n    \"subtype\": \"\",\n    \"team\": \"\",\n    \"text\": \"\",\n    \"thread_ts\": \"\",\n    \"topic\": \"\",\n    \"ts\": \"\",\n    \"type\": \"\",\n    \"unread_count\": {{faker 'datatype.number'}},\n    \"upload\": {{faker 'datatype.boolean'}},\n    \"user\": \"\",\n    \"user_profile\": {\n      \"avatar_hash\": \"\",\n      \"display_name\": \"\",\n      \"first_name\": \"\",\n      \"image_72\": \"\",\n      \"is_restricted\": {{faker 'datatype.boolean'}},\n      \"is_ultra_restricted\": {{faker 'datatype.boolean'}},\n      \"name\": \"\",\n      \"real_name\": \"\",\n      \"team\": \"\"\n    },\n    \"user_team\": \"\",\n    \"username\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"ts\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'not_in_channel' 'is_archived' 'msg_too_long' 'no_text' 'too_many_attachments' 'rate_limited' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response if too many attachments are included",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Schedules a message to be sent to a channel.",
      "method": "post",
      "endpoint": "chat.scheduleMessage",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": \"\",\n  \"message\": {\n    \"bot_id\": \"\",\n    \"text\": \"\",\n    \"type\": \"\",\n    \"user\": \"\",\n    \"username\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"post_at\": {{faker 'datatype.number'}},\n  \"scheduled_message_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'invalid_time' 'time_in_past' 'time_too_far' 'channel_not_found' 'not_in_channel' 'is_archived' 'msg_too_long' 'no_text' 'restricted_action' 'restricted_action_read_only_channel' 'restricted_action_thread_only_channel' 'restricted_action_non_threadable_channel' 'too_many_attachments' 'rate_limited' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'ekm_access_denied' 'missing_scope' 'invalid_arguments' 'invalid_arg_name' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response if the `post_at` is invalid (ex. in the past or too far into the future)",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Returns a list of scheduled messages.",
      "method": "get",
      "endpoint": "chat.scheduledMessages.list",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  },\n  \"scheduled_messages\": [\n    {\n      \"channel_id\": \"\",\n      \"date_created\": {{faker 'datatype.number'}},\n      \"id\": \"\",\n      \"post_at\": {{faker 'datatype.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'invalid_channel' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'ekm_access_denied' 'missing_scope' 'invalid_arguments' 'invalid_arg_name' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response if the channel passed is invalid",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Provide custom unfurl behavior for user-posted URLs",
      "method": "post",
      "endpoint": "chat.unfurl",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical, minimal success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'cannot_unfurl_url' 'cannot_find_service' 'missing_unfurls' 'cannot_prompt' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Updates a message.",
      "method": "post",
      "endpoint": "chat.update",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": \"\",\n  \"message\": {\n    \"team\": \"\",\n    \"text\": \"\",\n    \"type\": \"\",\n    \"user\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"text\": \"\",\n  \"ts\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'message_not_found' 'cant_update_message' 'channel_not_found' 'edit_window_closed' 'msg_too_long' 'too_many_attachments' 'rate_limited' 'no_text' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'request_timeout' 'invalid_json' 'json_not_object' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Archives a conversation.",
      "method": "post",
      "endpoint": "conversations.archive",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'not_supported' 'channel_not_found' 'already_archived' 'cant_archive_general' 'restricted_action' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Closes a direct message or multi-person direct message.",
      "method": "post",
      "endpoint": "conversations.close",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"already_closed\": {{faker 'datatype.boolean'}},\n  \"no_op\": {{faker 'datatype.boolean'}},\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'channel_not_found' 'user_does_not_own_channel' 'missing_scope' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Initiates a public or private channel-based conversation",
      "method": "post",
      "endpoint": "conversations.create",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "If successful, the command returns a rather stark [conversation object](/types/conversation)",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"detail\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'name_taken' 'restricted_action' 'no_channel' 'invalid_name_required' 'invalid_name_punctuation' 'invalid_name_maxlength' 'invalid_name_specials' 'invalid_name' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response when name already in use",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Fetches a conversation's history of messages and events.",
      "method": "get",
      "endpoint": "conversations.history",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response containing a channel's messages",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Retrieve information about a conversation.",
      "method": "get",
      "endpoint": "conversations.info",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response for a public channel. (Also, a response from a private channel and a multi-party IM is very similar to this example.)",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response when a channel cannot be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Invites users to a channel.",
      "method": "post",
      "endpoint": "conversations.invite",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response when an invitation is extended",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'user_not_found' 'no_user' 'cant_invite_self' 'not_in_channel' 'already_in_channel' 'is_archived' 'cant_invite' 'too_many_users' 'ura_max_channels' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"errors\": [\n    {\n      \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'user_not_found' 'no_user' 'cant_invite_self' 'not_in_channel' 'already_in_channel' 'is_archived' 'cant_invite' 'too_many_users' 'ura_max_channels' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n      \"ok\": \"{{oneOf (array 'false')}}\",\n      \"user\": \"\"\n    }\n  ],\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response when an invite is attempted on a conversation type that does not support it",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Joins an existing conversation.",
      "method": "post",
      "endpoint": "conversations.join",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"response_metadata\": {\n    \"warnings\": [\n      \"\"\n    ]\n  },\n  \"warning\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'is_archived' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response if the conversation is archived and cannot be joined",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Removes a user from a conversation.",
      "method": "post",
      "endpoint": "conversations.kick",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'user_not_found' 'cant_kick_self' 'not_in_channel' 'cant_kick_from_general' 'restricted_action' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response when you attempt to kick yourself from a channel",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Leaves a conversation.",
      "method": "post",
      "endpoint": "conversations.leave",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"not_in_channel\": \"{{oneOf (array 'true')}}\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'last_member' 'missing_scope' 'channel_not_found' 'is_archived' 'cant_leave_general' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response when attempting to leave a workspace's \"general\" channel",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Lists all channels in a Slack team.",
      "method": "get",
      "endpoint": "conversations.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response with only public channels",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Retrieve members of a conversation.",
      "method": "get",
      "endpoint": "conversations.members",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical paginated success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response when an invalid cursor is provided",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Opens or resumes a direct message or multi-person direct message.",
      "method": "post",
      "endpoint": "conversations.open",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"already_open\": {{faker 'datatype.boolean'}},\n  \"channel\": \"\",\n  \"no_op\": {{faker 'datatype.boolean'}},\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'user_not_found' 'user_not_visible' 'user_disabled' 'users_list_not_supplied' 'not_enough_users' 'too_many_users' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'channel_not_found')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Renames a conversation.",
      "method": "post",
      "endpoint": "conversations.rename",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'user_is_restricted' 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'not_in_channel' 'not_authorized' 'invalid_name' 'name_taken' 'invalid_name_required' 'invalid_name_punctuation' 'invalid_name_maxlength' 'invalid_name_specials' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response when the calling user is not a member of the conversation",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Retrieve a thread of messages posted to a conversation",
      "method": "get",
      "endpoint": "conversations.replies",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Sets the purpose for a conversation.",
      "method": "post",
      "endpoint": "conversations.setPurpose",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'not_in_channel' 'is_archived' 'too_long' 'user_is_restricted' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Sets the topic for a conversation.",
      "method": "post",
      "endpoint": "conversations.setTopic",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'not_in_channel' 'is_archived' 'too_long' 'user_is_restricted' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Reverses conversation archival.",
      "method": "post",
      "endpoint": "conversations.unarchive",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'not_archived' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Open a dialog with a user",
      "method": "get",
      "endpoint": "dialog.open",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response is quite minimal.",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'validation_errors' 'missing_trigger' 'missing_dialog' 'trigger_exchanged' 'trigger_expired' 'invalid_trigger' 'app_missing_action_url' 'cannot_create_dialog' 'failed_sending_dialog' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response, before getting to any possible validation errors.",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Ends the current user's Do Not Disturb session immediately.",
      "method": "post",
      "endpoint": "dnd.endDnd",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'unknown_error' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Ends the current user's snooze mode immediately.",
      "method": "post",
      "endpoint": "dnd.endSnooze",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"dnd_enabled\": {{faker 'datatype.boolean'}},\n  \"next_dnd_end_ts\": {{faker 'datatype.number'}},\n  \"next_dnd_start_ts\": {{faker 'datatype.number'}},\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"snooze_enabled\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'snooze_not_active' 'snooze_end_failed' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Retrieves a user's current Do Not Disturb status.",
      "method": "get",
      "endpoint": "dnd.info",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Turns on Do Not Disturb mode for the current user, or changes its duration.",
      "method": "post",
      "endpoint": "dnd.setSnooze",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Retrieves the Do Not Disturb status for up to 50 users on a team.",
      "method": "get",
      "endpoint": "dnd.teamInfo",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Lists custom emoji for a team.",
      "method": "get",
      "endpoint": "emoji.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Deletes an existing comment on a file.",
      "method": "post",
      "endpoint": "files.comments.delete",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard success response is very simple",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'cant_delete' 'comment_not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard failure response when used with an invalid token",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Deletes a file.",
      "method": "post",
      "endpoint": "files.delete",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'file_not_found' 'file_deleted' 'cant_delete_file' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Gets information about a team file.",
      "method": "get",
      "endpoint": "files.info",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Lists & filters team files.",
      "method": "get",
      "endpoint": "files.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Revokes public/external sharing access for a file",
      "method": "post",
      "endpoint": "files.revokePublicURL",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"file\": {\n    \"channels\": [\n      \"\"\n    ],\n    \"comments_count\": {{faker 'datatype.number'}},\n    \"created\": {{faker 'datatype.number'}},\n    \"display_as_bot\": {{faker 'datatype.boolean'}},\n    \"editable\": {{faker 'datatype.boolean'}},\n    \"editor\": \"\",\n    \"external_id\": \"\",\n    \"external_type\": \"\",\n    \"external_url\": \"\",\n    \"filetype\": \"\",\n    \"groups\": [\n      \"\"\n    ],\n    \"has_rich_preview\": {{faker 'datatype.boolean'}},\n    \"id\": \"\",\n    \"image_exif_rotation\": {{faker 'datatype.number'}},\n    \"ims\": [\n      \"\"\n    ],\n    \"is_external\": {{faker 'datatype.boolean'}},\n    \"is_public\": {{faker 'datatype.boolean'}},\n    \"is_starred\": {{faker 'datatype.boolean'}},\n    \"is_tombstoned\": {{faker 'datatype.boolean'}},\n    \"last_editor\": \"\",\n    \"mimetype\": \"\",\n    \"mode\": \"\",\n    \"name\": \"\",\n    \"num_stars\": {{faker 'datatype.number'}},\n    \"original_h\": {{faker 'datatype.number'}},\n    \"original_w\": {{faker 'datatype.number'}},\n    \"permalink\": \"\",\n    \"permalink_public\": \"\",\n    \"pinned_info\": {},\n    \"pinned_to\": [\n      \"\"\n    ],\n    \"pretty_type\": \"\",\n    \"preview\": \"\",\n    \"public_url_shared\": {{faker 'datatype.boolean'}},\n    \"reactions\": [\n      {\n        \"count\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"users\": [\n          \"\"\n        ]\n      }\n    ],\n    \"shares\": {\n      \"private\": \"\",\n      \"public\": \"\"\n    },\n    \"size\": {{faker 'datatype.number'}},\n    \"source_team\": \"\",\n    \"state\": \"\",\n    \"thumb_1024\": \"\",\n    \"thumb_1024_h\": {{faker 'datatype.number'}},\n    \"thumb_1024_w\": {{faker 'datatype.number'}},\n    \"thumb_160\": \"\",\n    \"thumb_360\": \"\",\n    \"thumb_360_h\": {{faker 'datatype.number'}},\n    \"thumb_360_w\": {{faker 'datatype.number'}},\n    \"thumb_480\": \"\",\n    \"thumb_480_h\": {{faker 'datatype.number'}},\n    \"thumb_480_w\": {{faker 'datatype.number'}},\n    \"thumb_64\": \"\",\n    \"thumb_720\": \"\",\n    \"thumb_720_h\": {{faker 'datatype.number'}},\n    \"thumb_720_w\": {{faker 'datatype.number'}},\n    \"thumb_80\": \"\",\n    \"thumb_800\": \"\",\n    \"thumb_800_h\": {{faker 'datatype.number'}},\n    \"thumb_800_w\": {{faker 'datatype.number'}},\n    \"thumb_960\": \"\",\n    \"thumb_960_h\": {{faker 'datatype.number'}},\n    \"thumb_960_w\": {{faker 'datatype.number'}},\n    \"timestamp\": {{faker 'datatype.number'}},\n    \"title\": \"\",\n    \"updated\": {{faker 'datatype.number'}},\n    \"url_private\": \"\",\n    \"url_private_download\": \"\",\n    \"user\": \"\",\n    \"user_team\": \"\",\n    \"username\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'file_not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Enables a file for public/external sharing.",
      "method": "post",
      "endpoint": "files.sharedPublicURL",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"file\": {\n    \"channels\": [\n      \"\"\n    ],\n    \"comments_count\": {{faker 'datatype.number'}},\n    \"created\": {{faker 'datatype.number'}},\n    \"display_as_bot\": {{faker 'datatype.boolean'}},\n    \"editable\": {{faker 'datatype.boolean'}},\n    \"editor\": \"\",\n    \"external_id\": \"\",\n    \"external_type\": \"\",\n    \"external_url\": \"\",\n    \"filetype\": \"\",\n    \"groups\": [\n      \"\"\n    ],\n    \"has_rich_preview\": {{faker 'datatype.boolean'}},\n    \"id\": \"\",\n    \"image_exif_rotation\": {{faker 'datatype.number'}},\n    \"ims\": [\n      \"\"\n    ],\n    \"is_external\": {{faker 'datatype.boolean'}},\n    \"is_public\": {{faker 'datatype.boolean'}},\n    \"is_starred\": {{faker 'datatype.boolean'}},\n    \"is_tombstoned\": {{faker 'datatype.boolean'}},\n    \"last_editor\": \"\",\n    \"mimetype\": \"\",\n    \"mode\": \"\",\n    \"name\": \"\",\n    \"num_stars\": {{faker 'datatype.number'}},\n    \"original_h\": {{faker 'datatype.number'}},\n    \"original_w\": {{faker 'datatype.number'}},\n    \"permalink\": \"\",\n    \"permalink_public\": \"\",\n    \"pinned_info\": {},\n    \"pinned_to\": [\n      \"\"\n    ],\n    \"pretty_type\": \"\",\n    \"preview\": \"\",\n    \"public_url_shared\": {{faker 'datatype.boolean'}},\n    \"reactions\": [\n      {\n        \"count\": {{faker 'datatype.number'}},\n        \"name\": \"\",\n        \"users\": [\n          \"\"\n        ]\n      }\n    ],\n    \"shares\": {\n      \"private\": \"\",\n      \"public\": \"\"\n    },\n    \"size\": {{faker 'datatype.number'}},\n    \"source_team\": \"\",\n    \"state\": \"\",\n    \"thumb_1024\": \"\",\n    \"thumb_1024_h\": {{faker 'datatype.number'}},\n    \"thumb_1024_w\": {{faker 'datatype.number'}},\n    \"thumb_160\": \"\",\n    \"thumb_360\": \"\",\n    \"thumb_360_h\": {{faker 'datatype.number'}},\n    \"thumb_360_w\": {{faker 'datatype.number'}},\n    \"thumb_480\": \"\",\n    \"thumb_480_h\": {{faker 'datatype.number'}},\n    \"thumb_480_w\": {{faker 'datatype.number'}},\n    \"thumb_64\": \"\",\n    \"thumb_720\": \"\",\n    \"thumb_720_h\": {{faker 'datatype.number'}},\n    \"thumb_720_w\": {{faker 'datatype.number'}},\n    \"thumb_80\": \"\",\n    \"thumb_800\": \"\",\n    \"thumb_800_h\": {{faker 'datatype.number'}},\n    \"thumb_800_w\": {{faker 'datatype.number'}},\n    \"thumb_960\": \"\",\n    \"thumb_960_h\": {{faker 'datatype.number'}},\n    \"thumb_960_w\": {{faker 'datatype.number'}},\n    \"timestamp\": {{faker 'datatype.number'}},\n    \"title\": \"\",\n    \"updated\": {{faker 'datatype.number'}},\n    \"url_private\": \"\",\n    \"url_private_download\": \"\",\n    \"user\": \"\",\n    \"user_team\": \"\",\n    \"username\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'file_not_found' 'not_allowed' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Uploads or creates a file.",
      "method": "post",
      "endpoint": "files.upload",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success response after uploading a file to a channel with an initial message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Archives a private channel.",
      "method": "post",
      "endpoint": "groups.archive",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'already_archived' 'group_contains_others' 'restricted_action' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Creates a private channel.",
      "method": "post",
      "endpoint": "groups.create",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"group\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"creator\": \"\",\n    \"id\": \"\",\n    \"is_archived\": {{faker 'datatype.boolean'}},\n    \"is_deleted\": {{faker 'datatype.boolean'}},\n    \"is_group\": {{faker 'datatype.boolean'}},\n    \"is_moved\": {{faker 'datatype.number'}},\n    \"is_mpim\": {{faker 'datatype.boolean'}},\n    \"is_open\": {{faker 'datatype.boolean'}},\n    \"is_pending_ext_shared\": {{faker 'datatype.boolean'}},\n    \"last_read\": \"\",\n    \"latest\": \"\",\n    \"members\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"name_normalized\": \"\",\n    \"num_members\": {{faker 'datatype.number'}},\n    \"priority\": {{faker 'datatype.number'}},\n    \"purpose\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"topic\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"unread_count\": {{faker 'datatype.number'}},\n    \"unread_count_display\": {{faker 'datatype.number'}}\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'no_channel' 'restricted_action' 'name_taken' 'invalid_name_required' 'invalid_name_punctuation' 'invalid_name_maxlength' 'invalid_name_specials' 'invalid_name' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Clones and archives a private channel.",
      "method": "post",
      "endpoint": "groups.createChild",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Fetches history of messages and events from a private channel.",
      "method": "get",
      "endpoint": "groups.history",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Gets information about a private channel.",
      "method": "get",
      "endpoint": "groups.info",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Invites a user to a private channel.",
      "method": "post",
      "endpoint": "groups.invite",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"group\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"creator\": \"\",\n    \"id\": \"\",\n    \"is_archived\": {{faker 'datatype.boolean'}},\n    \"is_deleted\": {{faker 'datatype.boolean'}},\n    \"is_group\": {{faker 'datatype.boolean'}},\n    \"is_moved\": {{faker 'datatype.number'}},\n    \"is_mpim\": {{faker 'datatype.boolean'}},\n    \"is_open\": {{faker 'datatype.boolean'}},\n    \"is_pending_ext_shared\": {{faker 'datatype.boolean'}},\n    \"last_read\": \"\",\n    \"latest\": \"\",\n    \"members\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"name_normalized\": \"\",\n    \"num_members\": {{faker 'datatype.number'}},\n    \"priority\": {{faker 'datatype.number'}},\n    \"purpose\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"topic\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"unread_count\": {{faker 'datatype.number'}},\n    \"unread_count_display\": {{faker 'datatype.number'}}\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'user_not_found' 'cant_invite_self' 'is_archived' 'cant_invite' 'ura_max_channels' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Removes a user from a private channel.",
      "method": "post",
      "endpoint": "groups.kick",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'user_not_found' 'cant_kick_self' 'not_in_group' 'restricted_action' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Leaves a private channel.",
      "method": "post",
      "endpoint": "groups.leave",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'is_archived' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Lists private channels that the calling user has access to.",
      "method": "get",
      "endpoint": "groups.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Sets the read cursor in a private channel.",
      "method": "post",
      "endpoint": "groups.mark",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'invalid_timestamp' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Opens a private channel.",
      "method": "post",
      "endpoint": "groups.open",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Renames a private channel.",
      "method": "post",
      "endpoint": "groups.rename",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"channel\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"creator\": \"\",\n    \"id\": \"\",\n    \"is_archived\": {{faker 'datatype.boolean'}},\n    \"is_deleted\": {{faker 'datatype.boolean'}},\n    \"is_group\": {{faker 'datatype.boolean'}},\n    \"is_moved\": {{faker 'datatype.number'}},\n    \"is_mpim\": {{faker 'datatype.boolean'}},\n    \"is_open\": {{faker 'datatype.boolean'}},\n    \"is_pending_ext_shared\": {{faker 'datatype.boolean'}},\n    \"last_read\": \"\",\n    \"latest\": \"\",\n    \"members\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"name_normalized\": \"\",\n    \"num_members\": {{faker 'datatype.number'}},\n    \"priority\": {{faker 'datatype.number'}},\n    \"purpose\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"topic\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"unread_count\": {{faker 'datatype.number'}},\n    \"unread_count_display\": {{faker 'datatype.number'}}\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'invalid_name' 'name_taken' 'invalid_name_required' 'invalid_name_punctuation' 'invalid_name_maxlength' 'invalid_name_specials' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Retrieve a thread of messages posted to a private channel",
      "method": "get",
      "endpoint": "groups.replies",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Sets the purpose for a private channel.",
      "method": "post",
      "endpoint": "groups.setPurpose",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"purpose\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'is_archived' 'too_long' 'user_is_restricted' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Sets the topic for a private channel.",
      "method": "post",
      "endpoint": "groups.setTopic",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"topic\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'is_archived' 'too_long' 'user_is_restricted' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Unarchives a private channel.",
      "method": "post",
      "endpoint": "groups.unarchive",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'not_archived' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Close a direct message channel.",
      "method": "post",
      "endpoint": "im.close",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"already_closed\": {{faker 'datatype.boolean'}},\n  \"no_op\": {{faker 'datatype.boolean'}},\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'user_does_not_own_channel' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Fetches history of messages and events from direct message channel.",
      "method": "get",
      "endpoint": "im.history",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Lists direct message channels for the calling user.",
      "method": "get",
      "endpoint": "im.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Sets the read cursor in a direct message channel.",
      "method": "post",
      "endpoint": "im.mark",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'invalid_timestamp' 'not_in_channel' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Opens a direct message channel.",
      "method": "post",
      "endpoint": "im.open",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"already_open\": {{faker 'datatype.boolean'}},\n  \"channel\": {\n    \"created\": \"\",\n    \"id\": \"\",\n    \"is_im\": {{faker 'datatype.boolean'}},\n    \"is_open\": {{faker 'datatype.boolean'}},\n    \"last_read\": \"\",\n    \"latest\": {\n      \"attachments\": [\n        {\n          \"fallback\": \"\",\n          \"id\": {{faker 'datatype.number'}},\n          \"image_bytes\": {{faker 'datatype.number'}},\n          \"image_height\": {{faker 'datatype.number'}},\n          \"image_url\": \"\",\n          \"image_width\": {{faker 'datatype.number'}}\n        }\n      ],\n      \"blocks\": [\n        {\n          \"type\": \"\"\n        }\n      ],\n      \"bot_id\": \"\",\n      \"client_msg_id\": \"\",\n      \"comment\": {\n        \"comment\": \"\",\n        \"created\": {{faker 'datatype.number'}},\n        \"id\": \"\",\n        \"is_intro\": {{faker 'datatype.boolean'}},\n        \"is_starred\": {{faker 'datatype.boolean'}},\n        \"num_stars\": {{faker 'datatype.number'}},\n        \"pinned_info\": {},\n        \"pinned_to\": [\n          \"\"\n        ],\n        \"reactions\": [\n          {\n            \"count\": {{faker 'datatype.number'}},\n            \"name\": \"\",\n            \"users\": [\n              \"\"\n            ]\n          }\n        ],\n        \"timestamp\": {{faker 'datatype.number'}},\n        \"user\": \"\"\n      },\n      \"display_as_bot\": {{faker 'datatype.boolean'}},\n      \"file\": {\n        \"channels\": [\n          \"\"\n        ],\n        \"comments_count\": {{faker 'datatype.number'}},\n        \"created\": {{faker 'datatype.number'}},\n        \"display_as_bot\": {{faker 'datatype.boolean'}},\n        \"editable\": {{faker 'datatype.boolean'}},\n        \"editor\": \"\",\n        \"external_id\": \"\",\n        \"external_type\": \"\",\n        \"external_url\": \"\",\n        \"filetype\": \"\",\n        \"groups\": [\n          \"\"\n        ],\n        \"has_rich_preview\": {{faker 'datatype.boolean'}},\n        \"id\": \"\",\n        \"image_exif_rotation\": {{faker 'datatype.number'}},\n        \"ims\": [\n          \"\"\n        ],\n        \"is_external\": {{faker 'datatype.boolean'}},\n        \"is_public\": {{faker 'datatype.boolean'}},\n        \"is_starred\": {{faker 'datatype.boolean'}},\n        \"is_tombstoned\": {{faker 'datatype.boolean'}},\n        \"last_editor\": \"\",\n        \"mimetype\": \"\",\n        \"mode\": \"\",\n        \"name\": \"\",\n        \"num_stars\": {{faker 'datatype.number'}},\n        \"original_h\": {{faker 'datatype.number'}},\n        \"original_w\": {{faker 'datatype.number'}},\n        \"permalink\": \"\",\n        \"permalink_public\": \"\",\n        \"pinned_info\": {},\n        \"pinned_to\": [\n          \"\"\n        ],\n        \"pretty_type\": \"\",\n        \"preview\": \"\",\n        \"public_url_shared\": {{faker 'datatype.boolean'}},\n        \"reactions\": [\n          {\n            \"count\": {{faker 'datatype.number'}},\n            \"name\": \"\",\n            \"users\": [\n              \"\"\n            ]\n          }\n        ],\n        \"shares\": {\n          \"private\": \"\",\n          \"public\": \"\"\n        },\n        \"size\": {{faker 'datatype.number'}},\n        \"source_team\": \"\",\n        \"state\": \"\",\n        \"thumb_1024\": \"\",\n        \"thumb_1024_h\": {{faker 'datatype.number'}},\n        \"thumb_1024_w\": {{faker 'datatype.number'}},\n        \"thumb_160\": \"\",\n        \"thumb_360\": \"\",\n        \"thumb_360_h\": {{faker 'datatype.number'}},\n        \"thumb_360_w\": {{faker 'datatype.number'}},\n        \"thumb_480\": \"\",\n        \"thumb_480_h\": {{faker 'datatype.number'}},\n        \"thumb_480_w\": {{faker 'datatype.number'}},\n        \"thumb_64\": \"\",\n        \"thumb_720\": \"\",\n        \"thumb_720_h\": {{faker 'datatype.number'}},\n        \"thumb_720_w\": {{faker 'datatype.number'}},\n        \"thumb_80\": \"\",\n        \"thumb_800\": \"\",\n        \"thumb_800_h\": {{faker 'datatype.number'}},\n        \"thumb_800_w\": {{faker 'datatype.number'}},\n        \"thumb_960\": \"\",\n        \"thumb_960_h\": {{faker 'datatype.number'}},\n        \"thumb_960_w\": {{faker 'datatype.number'}},\n        \"timestamp\": {{faker 'datatype.number'}},\n        \"title\": \"\",\n        \"updated\": {{faker 'datatype.number'}},\n        \"url_private\": \"\",\n        \"url_private_download\": \"\",\n        \"user\": \"\",\n        \"user_team\": \"\",\n        \"username\": \"\"\n      },\n      \"files\": [\n        {\n          \"channels\": [\n            \"\"\n          ],\n          \"comments_count\": {{faker 'datatype.number'}},\n          \"created\": {{faker 'datatype.number'}},\n          \"display_as_bot\": {{faker 'datatype.boolean'}},\n          \"editable\": {{faker 'datatype.boolean'}},\n          \"editor\": \"\",\n          \"external_id\": \"\",\n          \"external_type\": \"\",\n          \"external_url\": \"\",\n          \"filetype\": \"\",\n          \"groups\": [\n            \"\"\n          ],\n          \"has_rich_preview\": {{faker 'datatype.boolean'}},\n          \"id\": \"\",\n          \"image_exif_rotation\": {{faker 'datatype.number'}},\n          \"ims\": [\n            \"\"\n          ],\n          \"is_external\": {{faker 'datatype.boolean'}},\n          \"is_public\": {{faker 'datatype.boolean'}},\n          \"is_starred\": {{faker 'datatype.boolean'}},\n          \"is_tombstoned\": {{faker 'datatype.boolean'}},\n          \"last_editor\": \"\",\n          \"mimetype\": \"\",\n          \"mode\": \"\",\n          \"name\": \"\",\n          \"num_stars\": {{faker 'datatype.number'}},\n          \"original_h\": {{faker 'datatype.number'}},\n          \"original_w\": {{faker 'datatype.number'}},\n          \"permalink\": \"\",\n          \"permalink_public\": \"\",\n          \"pinned_info\": {},\n          \"pinned_to\": [\n            \"\"\n          ],\n          \"pretty_type\": \"\",\n          \"preview\": \"\",\n          \"public_url_shared\": {{faker 'datatype.boolean'}},\n          \"reactions\": [\n            {\n              \"count\": {{faker 'datatype.number'}},\n              \"name\": \"\",\n              \"users\": [\n                \"\"\n              ]\n            }\n          ],\n          \"shares\": {\n            \"private\": \"\",\n            \"public\": \"\"\n          },\n          \"size\": {{faker 'datatype.number'}},\n          \"source_team\": \"\",\n          \"state\": \"\",\n          \"thumb_1024\": \"\",\n          \"thumb_1024_h\": {{faker 'datatype.number'}},\n          \"thumb_1024_w\": {{faker 'datatype.number'}},\n          \"thumb_160\": \"\",\n          \"thumb_360\": \"\",\n          \"thumb_360_h\": {{faker 'datatype.number'}},\n          \"thumb_360_w\": {{faker 'datatype.number'}},\n          \"thumb_480\": \"\",\n          \"thumb_480_h\": {{faker 'datatype.number'}},\n          \"thumb_480_w\": {{faker 'datatype.number'}},\n          \"thumb_64\": \"\",\n          \"thumb_720\": \"\",\n          \"thumb_720_h\": {{faker 'datatype.number'}},\n          \"thumb_720_w\": {{faker 'datatype.number'}},\n          \"thumb_80\": \"\",\n          \"thumb_800\": \"\",\n          \"thumb_800_h\": {{faker 'datatype.number'}},\n          \"thumb_800_w\": {{faker 'datatype.number'}},\n          \"thumb_960\": \"\",\n          \"thumb_960_h\": {{faker 'datatype.number'}},\n          \"thumb_960_w\": {{faker 'datatype.number'}},\n          \"timestamp\": {{faker 'datatype.number'}},\n          \"title\": \"\",\n          \"updated\": {{faker 'datatype.number'}},\n          \"url_private\": \"\",\n          \"url_private_download\": \"\",\n          \"user\": \"\",\n          \"user_team\": \"\",\n          \"username\": \"\"\n        }\n      ],\n      \"icons\": {\n        \"emoji\": \"\"\n      },\n      \"inviter\": \"\",\n      \"is_delayed_message\": {{faker 'datatype.boolean'}},\n      \"is_intro\": {{faker 'datatype.boolean'}},\n      \"is_starred\": {{faker 'datatype.boolean'}},\n      \"last_read\": \"\",\n      \"latest_reply\": \"\",\n      \"name\": \"\",\n      \"old_name\": \"\",\n      \"parent_user_id\": \"\",\n      \"permalink\": \"\",\n      \"pinned_to\": [\n        \"\"\n      ],\n      \"purpose\": \"\",\n      \"reactions\": [\n        {\n          \"count\": {{faker 'datatype.number'}},\n          \"name\": \"\",\n          \"users\": [\n            \"\"\n          ]\n        }\n      ],\n      \"replies\": [\n        {\n          \"ts\": \"\",\n          \"user\": \"\"\n        }\n      ],\n      \"reply_count\": {{faker 'datatype.number'}},\n      \"reply_users\": [\n        \"\"\n      ],\n      \"reply_users_count\": {{faker 'datatype.number'}},\n      \"source_team\": \"\",\n      \"subscribed\": {{faker 'datatype.boolean'}},\n      \"subtype\": \"\",\n      \"team\": \"\",\n      \"text\": \"\",\n      \"thread_ts\": \"\",\n      \"topic\": \"\",\n      \"ts\": \"\",\n      \"type\": \"\",\n      \"unread_count\": {{faker 'datatype.number'}},\n      \"upload\": {{faker 'datatype.boolean'}},\n      \"user\": \"\",\n      \"user_profile\": {\n        \"avatar_hash\": \"\",\n        \"display_name\": \"\",\n        \"first_name\": \"\",\n        \"image_72\": \"\",\n        \"is_restricted\": {{faker 'datatype.boolean'}},\n        \"is_ultra_restricted\": {{faker 'datatype.boolean'}},\n        \"name\": \"\",\n        \"real_name\": \"\",\n        \"team\": \"\"\n      },\n      \"user_team\": \"\",\n      \"username\": \"\"\n    },\n    \"unread_count\": {{faker 'datatype.number'}},\n    \"unread_count_display\": {{faker 'datatype.number'}},\n    \"user\": \"\"\n  },\n  \"no_op\": {{faker 'datatype.boolean'}},\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'user_not_found' 'user_not_visible' 'user_disabled' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Retrieve a thread of messages posted to a direct message conversation",
      "method": "get",
      "endpoint": "im.replies",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "For Enterprise Grid workspaces, map local user IDs to global user IDs",
      "method": "get",
      "endpoint": "migration.exchange",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response when mappings exist for the specified user IDs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response when there are no mappings to provide",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Closes a multiparty direct message channel.",
      "method": "post",
      "endpoint": "mpim.close",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Fetches history of messages and events from a multiparty direct message.",
      "method": "get",
      "endpoint": "mpim.history",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Lists multiparty direct message channels for the calling user.",
      "method": "get",
      "endpoint": "mpim.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Sets the read cursor in a multiparty direct message channel.",
      "method": "post",
      "endpoint": "mpim.mark",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'channel_not_found' 'invalid_timestamp' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "This method opens a multiparty direct message.",
      "method": "post",
      "endpoint": "mpim.open",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"group\": {\n    \"created\": {{faker 'datatype.number'}},\n    \"creator\": \"\",\n    \"id\": \"\",\n    \"is_archived\": {{faker 'datatype.boolean'}},\n    \"is_deleted\": {{faker 'datatype.boolean'}},\n    \"is_group\": {{faker 'datatype.boolean'}},\n    \"is_moved\": {{faker 'datatype.number'}},\n    \"is_mpim\": {{faker 'datatype.boolean'}},\n    \"is_open\": {{faker 'datatype.boolean'}},\n    \"is_pending_ext_shared\": {{faker 'datatype.boolean'}},\n    \"last_read\": \"\",\n    \"latest\": \"\",\n    \"members\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"name_normalized\": \"\",\n    \"num_members\": {{faker 'datatype.number'}},\n    \"priority\": {{faker 'datatype.number'}},\n    \"purpose\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"topic\": {\n      \"creator\": \"\",\n      \"last_set\": {{faker 'datatype.number'}},\n      \"value\": \"\"\n    },\n    \"unread_count\": {{faker 'datatype.number'}},\n    \"unread_count_display\": {{faker 'datatype.number'}}\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'users_list_not_supplied' 'not_enough_users' 'too_many_users' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Retrieve a thread of messages posted to a direct message conversation from a multiparty direct message.",
      "method": "get",
      "endpoint": "mpim.replies",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Exchanges a temporary OAuth verifier code for an access token.",
      "method": "get",
      "endpoint": "oauth.access",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful user token negotiation for a single scope",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Exchanges a temporary OAuth verifier code for a workspace token.",
      "method": "get",
      "endpoint": "oauth.token",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success example using a workspace app produces a very different kind of response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Pins an item to a channel.",
      "method": "post",
      "endpoint": "pins.add",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'file_not_found' 'file_comment_not_found' 'message_not_found' 'channel_not_found' 'no_item_specified' 'already_pinned' 'permission_denied' 'file_not_shared' 'not_pinnable' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Lists items pinned to a channel.",
      "method": "get",
      "endpoint": "pins.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Un-pins an item from a channel.",
      "method": "post",
      "endpoint": "pins.remove",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'file_not_found' 'file_comment_not_found' 'message_not_found' 'no_item_specified' 'not_pinned' 'permission_denied' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_typ' 'missing_post_typ' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeou' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Adds a reaction to an item.",
      "method": "post",
      "endpoint": "reactions.add",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'file_not_found' 'file_comment_not_found' 'message_not_found' 'no_item_specified' 'invalid_name' 'already_reacted' 'too_many_emoji' 'too_many_reactions' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Gets reactions for an item.",
      "method": "get",
      "endpoint": "reactions.get",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Lists reactions made by a user.",
      "method": "get",
      "endpoint": "reactions.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Removes a reaction from an item.",
      "method": "post",
      "endpoint": "reactions.remove",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'file_not_found' 'file_comment_not_found' 'message_not_found' 'no_item_specified' 'invalid_name' 'no_reaction' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Creates a reminder.",
      "method": "post",
      "endpoint": "reminders.add",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"reminder\": {\n    \"complete_ts\": {{faker 'datatype.number'}},\n    \"creator\": \"\",\n    \"id\": \"\",\n    \"recurring\": {{faker 'datatype.boolean'}},\n    \"text\": \"\",\n    \"time\": {{faker 'datatype.number'}},\n    \"user\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'cannot_parse' 'user_not_found' 'cannot_add_bot' 'cannot_add_slackbot' 'cannot_add_others' 'cannot_add_others_recurring' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Marks a reminder as complete.",
      "method": "post",
      "endpoint": "reminders.complete",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'not_found' 'cannot_complete_recurring' 'cannot_complete_others' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Deletes a reminder.",
      "method": "post",
      "endpoint": "reminders.delete",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Gets information about a reminder.",
      "method": "get",
      "endpoint": "reminders.info",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Lists all reminders created by or for a given user.",
      "method": "get",
      "endpoint": "reminders.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Starts a Real Time Messaging session.",
      "method": "get",
      "endpoint": "rtm.connect",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Searches for messages matching a query.",
      "method": "get",
      "endpoint": "search.messages",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Adds a star to an item.",
      "method": "post",
      "endpoint": "stars.add",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'message_not_found' 'file_not_found' 'file_comment_not_found' 'channel_not_found' 'no_item_specified' 'already_starred' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Lists stars for a user.",
      "method": "get",
      "endpoint": "stars.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Removes a star from an item.",
      "method": "post",
      "endpoint": "stars.remove",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'message_not_found' 'file_not_found' 'file_comment_not_found' 'channel_not_found' 'no_item_specified' 'not_starred' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Gets the access logs for the current team.",
      "method": "get",
      "endpoint": "team.accessLogs",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "This response demonstrates pagination and two access log entries.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A workspace must be on a paid plan to use this method, otherwise the `paid_only` error is thrown:",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Gets billable users information for the current team.",
      "method": "get",
      "endpoint": "team.billableInfo",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Gets information about the current team.",
      "method": "get",
      "endpoint": "team.info",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Gets the integration logs for the current team.",
      "method": "get",
      "endpoint": "team.integrationLogs",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Retrieve a team's profile.",
      "method": "get",
      "endpoint": "team.profile.get",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Create a User Group",
      "method": "post",
      "endpoint": "usergroups.create",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"usergroup\": {\n    \"auto_provision\": {{faker 'datatype.boolean'}},\n    \"auto_type\": \"\",\n    \"created_by\": \"\",\n    \"date_create\": {{faker 'datatype.number'}},\n    \"date_delete\": {{faker 'datatype.number'}},\n    \"date_update\": {{faker 'datatype.number'}},\n    \"deleted_by\": \"\",\n    \"description\": \"\",\n    \"enterprise_subteam_id\": \"\",\n    \"handle\": \"\",\n    \"id\": \"\",\n    \"is_external\": {{faker 'datatype.boolean'}},\n    \"is_subteam\": {{faker 'datatype.boolean'}},\n    \"is_usergroup\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"prefs\": {\n      \"channels\": [\n        \"\"\n      ],\n      \"groups\": [\n        \"\"\n      ]\n    },\n    \"team_id\": \"\",\n    \"updated_by\": \"\",\n    \"user_count\": {{faker 'datatype.number'}},\n    \"users\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'permission_denied' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Disable an existing User Group",
      "method": "post",
      "endpoint": "usergroups.disable",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"usergroup\": {\n    \"auto_provision\": {{faker 'datatype.boolean'}},\n    \"auto_type\": \"\",\n    \"created_by\": \"\",\n    \"date_create\": {{faker 'datatype.number'}},\n    \"date_delete\": {{faker 'datatype.number'}},\n    \"date_update\": {{faker 'datatype.number'}},\n    \"deleted_by\": \"\",\n    \"description\": \"\",\n    \"enterprise_subteam_id\": \"\",\n    \"handle\": \"\",\n    \"id\": \"\",\n    \"is_external\": {{faker 'datatype.boolean'}},\n    \"is_subteam\": {{faker 'datatype.boolean'}},\n    \"is_usergroup\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"prefs\": {\n      \"channels\": [\n        \"\"\n      ],\n      \"groups\": [\n        \"\"\n      ]\n    },\n    \"team_id\": \"\",\n    \"updated_by\": \"\",\n    \"user_count\": {{faker 'datatype.number'}},\n    \"users\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'permission_denied' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Enable a User Group",
      "method": "post",
      "endpoint": "usergroups.enable",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"usergroup\": {\n    \"auto_provision\": {{faker 'datatype.boolean'}},\n    \"auto_type\": \"\",\n    \"created_by\": \"\",\n    \"date_create\": {{faker 'datatype.number'}},\n    \"date_delete\": {{faker 'datatype.number'}},\n    \"date_update\": {{faker 'datatype.number'}},\n    \"deleted_by\": \"\",\n    \"description\": \"\",\n    \"enterprise_subteam_id\": \"\",\n    \"handle\": \"\",\n    \"id\": \"\",\n    \"is_external\": {{faker 'datatype.boolean'}},\n    \"is_subteam\": {{faker 'datatype.boolean'}},\n    \"is_usergroup\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"prefs\": {\n      \"channels\": [\n        \"\"\n      ],\n      \"groups\": [\n        \"\"\n      ]\n    },\n    \"team_id\": \"\",\n    \"updated_by\": \"\",\n    \"user_count\": {{faker 'datatype.number'}},\n    \"users\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_require' 'fatal_error' 'missing_charset' 'superfluous_charset')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "List all User Groups for a team",
      "method": "get",
      "endpoint": "usergroups.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Update an existing User Group",
      "method": "post",
      "endpoint": "usergroups.update",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"usergroup\": {\n    \"auto_provision\": {{faker 'datatype.boolean'}},\n    \"auto_type\": \"\",\n    \"created_by\": \"\",\n    \"date_create\": {{faker 'datatype.number'}},\n    \"date_delete\": {{faker 'datatype.number'}},\n    \"date_update\": {{faker 'datatype.number'}},\n    \"deleted_by\": \"\",\n    \"description\": \"\",\n    \"enterprise_subteam_id\": \"\",\n    \"handle\": \"\",\n    \"id\": \"\",\n    \"is_external\": {{faker 'datatype.boolean'}},\n    \"is_subteam\": {{faker 'datatype.boolean'}},\n    \"is_usergroup\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"prefs\": {\n      \"channels\": [\n        \"\"\n      ],\n      \"groups\": [\n        \"\"\n      ]\n    },\n    \"team_id\": \"\",\n    \"updated_by\": \"\",\n    \"user_count\": {{faker 'datatype.number'}},\n    \"users\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'permission_denied' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_require' 'fatal_error' 'missing_charset' 'superfluous_charset')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "List all users in a User Group",
      "method": "get",
      "endpoint": "usergroups.users.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard success response when used with a user token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Standard failure response when used with an invalid token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Update the list of users for a User Group",
      "method": "post",
      "endpoint": "usergroups.users.update",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"usergroup\": {\n    \"auto_provision\": {{faker 'datatype.boolean'}},\n    \"auto_type\": \"\",\n    \"created_by\": \"\",\n    \"date_create\": {{faker 'datatype.number'}},\n    \"date_delete\": {{faker 'datatype.number'}},\n    \"date_update\": {{faker 'datatype.number'}},\n    \"deleted_by\": \"\",\n    \"description\": \"\",\n    \"enterprise_subteam_id\": \"\",\n    \"handle\": \"\",\n    \"id\": \"\",\n    \"is_external\": {{faker 'datatype.boolean'}},\n    \"is_subteam\": {{faker 'datatype.boolean'}},\n    \"is_usergroup\": {{faker 'datatype.boolean'}},\n    \"name\": \"\",\n    \"prefs\": {\n      \"channels\": [\n        \"\"\n      ],\n      \"groups\": [\n        \"\"\n      ]\n    },\n    \"team_id\": \"\",\n    \"updated_by\": \"\",\n    \"user_count\": {{faker 'datatype.number'}},\n    \"users\": [\n      \"\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'permission_denied' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_require' 'fatal_error' 'missing_charset' 'superfluous_charset')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "List conversations the calling user may access.",
      "method": "get",
      "endpoint": "users.conversations",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response with only public channels. Note how `num_members` and `is_member` are not returned like typical `conversations` objects.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Delete the user profile photo",
      "method": "post",
      "endpoint": "users.deletePhoto",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Gets user presence information.",
      "method": "get",
      "endpoint": "users.getPresence",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "When requesting information for a different user, this method just returns the current presence (either `active` or `away`).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Get a user's identity.",
      "method": "get",
      "endpoint": "users.identity",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "You will receive at a minimum the following information:",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Gets information about a user.",
      "method": "get",
      "endpoint": "users.info",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Lists all users in a Slack team.",
      "method": "get",
      "endpoint": "users.list",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Find a user with an email address.",
      "method": "get",
      "endpoint": "users.lookupByEmail",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Retrieves a user's profile information.",
      "method": "get",
      "endpoint": "users.profile.get",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Set the profile information for a user.",
      "method": "post",
      "endpoint": "users.profile.set",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"profile\": {\n    \"always_active\": {{faker 'datatype.boolean'}},\n    \"api_app_id\": \"\",\n    \"avatar_hash\": \"\",\n    \"bot_id\": \"\",\n    \"display_name\": \"\",\n    \"display_name_normalized\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"fields\": {},\n    \"first_name\": \"\",\n    \"guest_channels\": \"\",\n    \"guest_expiration_ts\": {{faker 'datatype.number'}},\n    \"guest_invited_by\": \"\",\n    \"image_1024\": \"\",\n    \"image_192\": \"\",\n    \"image_24\": \"\",\n    \"image_32\": \"\",\n    \"image_48\": \"\",\n    \"image_512\": \"\",\n    \"image_72\": \"\",\n    \"image_original\": \"\",\n    \"is_custom_image\": {{faker 'datatype.boolean'}},\n    \"last_name\": \"\",\n    \"phone\": \"\",\n    \"real_name\": \"\",\n    \"real_name_normalized\": \"\",\n    \"skype\": \"\",\n    \"status_emoji\": \"\",\n    \"status_expiration\": {{faker 'datatype.number'}},\n    \"status_text\": \"\",\n    \"status_text_canonical\": \"\",\n    \"team\": \"\",\n    \"teams\": \"\",\n    \"title\": \"\"\n  },\n  \"username\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'reserved_name' 'invalid_profile' 'profile_set_failed' 'not_admin' 'not_app_admin' 'cannot_update_admin_user' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Marked a user as active. Deprecated and non-functional.",
      "method": "post",
      "endpoint": "users.setActive",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Set the user profile photo",
      "method": "post",
      "endpoint": "users.setPhoto",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "",
      "documentation": "Manually sets user presence.",
      "method": "post",
      "endpoint": "users.setPresence",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical success response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        },
        {
          "uuid": "",
          "body": "{\n  \"error\": \"{{oneOf (array 'invalid_presence' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Typical error response",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [{ "key": "", "value": "" }],
  "proxyResHeaders": [{ "key": "", "value": "" }],
  "proxyRemovePrefix": false,
  "hostname": "0.0.0.0",
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  }
}
